//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.03.08 at 03:04:39 PM MST 
//


package ethan.jaxb.ruleset;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the ethan.tabulator.ruleset.jaxb package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: ethan.tabulator.ruleset.jaxb
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link BracketOrg }
     * 
     */
    public BracketOrg createBracketOrg() {
        return new BracketOrg();
    }

    /**
     * Create an instance of {@link Ruleset }
     * 
     */
    public Ruleset createRuleset() {
        return new Ruleset();
    }

    /**
     * Create an instance of {@link RoundRange }
     * 
     */
    public RoundRange createRoundRange() {
        return new RoundRange();
    }

    /**
     * Create an instance of {@link Ruleset.RoundPairing }
     * 
     */
    public Ruleset.RoundPairing createRulesetRoundPairing() {
        return new Ruleset.RoundPairing();
    }

    /**
     * Create an instance of {@link Ruleset.RoundPairing.ResultData }
     * 
     */
    public Ruleset.RoundPairing.ResultData createRulesetRoundPairingResultData() {
        return new Ruleset.RoundPairing.ResultData();
    }

    /**
     * Create an instance of {@link BracketOrg.Bracket }
     * 
     */
    public BracketOrg.Bracket createBracketOrgBracket() {
        return new BracketOrg.Bracket();
    }

    /**
     * Create an instance of {@link Method }
     * 
     */
    public Method createMethod() {
        return new Method();
    }

    /**
     * Create an instance of {@link BracketOrg.OddRule }
     * 
     */
    public BracketOrg.OddRule createBracketOrgOddRule() {
        return new BracketOrg.OddRule();
    }

    /**
     * Create an instance of {@link BracketOrg.BracketGenerator }
     * 
     */
    public BracketOrg.BracketGenerator createBracketOrgBracketGenerator() {
        return new BracketOrg.BracketGenerator();
    }

    /**
     * Create an instance of {@link Rule }
     * 
     */
    public Rule createRule() {
        return new Rule();
    }

    /**
     * Create an instance of {@link Ruleset.JudgePairing }
     * 
     */
    public Ruleset.JudgePairing createRulesetJudgePairing() {
        return new Ruleset.JudgePairing();
    }

    /**
     * Create an instance of {@link RoundRange.Round }
     * 
     */
    public RoundRange.Round createRoundRangeRound() {
        return new RoundRange.Round();
    }

    /**
     * Create an instance of {@link Ruleset.RoundPairing.ResultData.RoundResult }
     * 
     */
    public Ruleset.RoundPairing.ResultData.RoundResult createRulesetRoundPairingResultDataRoundResult() {
        return new Ruleset.RoundPairing.ResultData.RoundResult();
    }

    /**
     * Create an instance of {@link BracketOrg.Bracket.Filter }
     * 
     */
    public BracketOrg.Bracket.Filter createBracketOrgBracketFilter() {
        return new BracketOrg.Bracket.Filter();
    }

}
